In this tutorial, we want a LVM backed volume. 
The new Template's VM is called 'RHEL-7-minimal-template'.
The LVM storage pool is called 'sp-lvm' and is based on the LVM Volum Group called 'LVMLibVirtLvmSP'.
The new Template's volume is called 'RHEL-7-minimal-template-vda'.
The new Template's VM will have mac address '52:54:00:01:00:81', ip address '168.122.122.181' and fqdn 'RHEL-7-minimal-template.cloud.local'.

1/ Set the new template's VM mac, ip and fqdn :
  - dnsmasq configuration :
  edit /etc/hosts and put this at the end :
    [...]
    192.168.122.181  RHEL-7-minimal-template.cloud.local

  - libvirt network configuration :
  edit the libvirt default network and insert this element under /network/ip/dhcp :
    # virsh net-edit default
      <host mac='52:54:00:01:00:81' name='RHEL-7-minimal-template.cloud.local' ip='192.168.122.181' />
  restart the libvirt network :
    # virsh net-destroy default
    # virsh net-start default

  - melody configuration :
  edit /Cloud/libvirt/conf-net.xml and insert this element under /network/ip/dhcp :
    <host allocated="true" ip="192.168.122.181" keypair-name="id_rsa" mac="52:54:00:01:00:81" name="RHEL-7-minimal-template.cloud.local"/>

2/ Create the new template's volume :
  Using the libvirt-manager, click the menu 'Edit/connection Details'.
  In the 'Connection Details' dialog box, click the tab 'Storage'.
  In the 'Storage' dialog box, on the left side, select the LVM storage pool 'sp-lvm', then click on the lower right button 'New Volume'.
  In the 'New Volume' dialog box, set the name to 'RHEL-7-minimal-template-vda', the size to 5120 M (e.g 5G) and the allocation to the same value.
  Finally, click the lower right button 'finish'.
  Once the new volume is created, close the 'connection details' dialog box.

  Note : if the allocation is lower than the size, then the new volume will be a LVM LV snapshot.
  We don't want snapshot. For this reason, we must provide an allocation equal to the size.


3/ Create the new template's VM :
  Using the libvirt-manager, right click on the established connection and then click on 'New'.
  In the 'New VM' dialog box, set the name to 'RHEL-7-minimal-template', select the iso location.
  Select the previously defined storage, and set the mac address to '52:54:00:01:00:81'.
  Then, follow the installation process. Configure its network as DHCP + on boot.
  Once installed, stop the new template's VM.

4/ Modify the new template's VM so it can be controlled by Melody :
  - create a new empty newtork filter called 'pa-00010081' :
  create the file /tmp/pa.xml and put this inside
    <filter name='pa-00010081' chain='root'>
    </filter>
  define the network filter
    # virsh nwfilter-define --file /tmp/pa.xml

  - create a new network filter called 'RHEL-7-minimal-template-eth0-nwfilter' :
  create the file /tmp/msg.xml and put this inside
    <filter name='RHEL-7-minimal-template-eth0-nwfilter' chain='root'>
      <filterref filter='pa-00010081'/>
      <rule action='accept' direction='out' priority='500'>
        <all state='NEW'/>
      </rule>
      <rule action='accept' direction='out' priority='500'>
        <all state='ESTABLISHED,RELATED'/>
      </rule>
      <rule action='accept' direction='in' priority='500'>
        <all state='ESTABLISHED'/>
      </rule>
      <rule action='drop' direction='inout' priority='500'>
        <all/>
      </rule>
    </filter>
  define the network filter
    # virsh nwfilter-define --file /tmp/msg.xml

  - declare the network filter in the libvirt image :
    # virsh edit RHEL-7-minimal-template
      add the following element under the element /domain/devices/interface[@type='network']
        <filterref filter='RHEL-7-minimal-template-eth0-nwfilter'/>

  - declare the network filter as a protected area in Melody :
  edit /Cloud/libvirt/conf.xml
  add the following element under the element /libvirtcloud/protected-areas
    <protected-area description="Protected area dedicated to a template, generated by Melody." id="pa-00010081" name="melody-self-protected-area:RHEL-7-minimal-template:eth0">
      <domains>
        <domain id="RHEL-7-minimal-template" mac-addr="52:54:00:01:00:81" netdevname="eth0"/>
      </domains>
      <rules/>
    </protected-area>

  - start the template's VM
    # virsh start RHEL-7-minimal-template
  - upload Melody lvcd script inside :
  upload these scripts :
    melody.plugin.libvirt/conf.sample/lvcd/lvcd.initd should be placed in /etc/init.d/lvcd
    melody.plugin.libvirt/conf.sample/lvcd/lvcd.script should be placed in /usr/sbin/lvcd
  set permissions :
    chmod 755 /etc/init.d/lvcd
    chmod 744 /usr/sbin/lvcd
  enable lvcd at startup
    chkconfig --add lvcd
    chkconfig lvcd on
  do your best so that lvcd starts after network and before ssh 
  - stop the template's VM
    # virsh destroy RHEL-7-minimal-template


5/ Configure the new template in Melody :
  - create the libvirt image descriptor for the template
  dump the new template libvirt image :
    # virsh dumpxml RHEL-7-minimal-template > /Cloud/libvirt/templates/RHEL-7-minimal.template
  modify the image dump to transform it so it can be used as a libvirt image descriptor template :
    edit /Cloud/libvirt/templates/RHEL-7-minimal.template
    remove attribute /domain/@id
    remove element /domain/uuid
    set '§[vmName]§' in element /domain/name/text()
    set '§[ram]§' in element /domain/memory/text()
    set '§[ram]§' in element /domain/currentMemory/text()
    set '§[vcpu]§' in element /domain/vcpu/text()
    set '/dev/LibVirtLvmSP/§[vmName]§-vda' in attribute /domain/devices/disk[@type='block' and @device='disk']/source/@dev
    set '§[vmMacAddr]§' in attribute /domain/devices/interface[@type='network']/mac/@address
    set '§[vmName]§-§[eth]§-nwfilter' in attribute /domain/devices/interface[@type='network']/mac/filterref/@filter
  set permission :
    chmod 660 /Cloud/libvirt/templates/RHEL-7-minimal.template

  - create the libvirt disk descriptor for the disk's template
  dump the new template's volume :
    # virsh vol-dumpxml RHEL-7-minimal-template-vda --pool sp-lvm > /Cloud/libvirt/templates/RHEL-7-minimal-vda.template
  modify the volume dump to transform it so it can be used as a libvirt disk descriptor template :
    edit /Cloud/libvirt/templates/RHEL-7-minimal-vda.template
    remove the element /volume/key
    remove the element /volume/source/device/extent
    remove the element /volume/target/permissions
    remove the element /volume/target/timestamps
    set '§[vmName]§-vda' in element /volume/name/text()
    set '/dev/LibVirtLvmSP/§[vmName]§-vda' in element /volume/target/path()
    set '2147483648' in element /volume/capacity/text()
    set '2147483648' in element /volume/allocation/text()
  set permission :
    chmod 660 /Cloud/libvirt/templates/RHEL-7-minimal-vda.template

  - declare the new template in Melody :
  edit /Cloud/libvirt/conf.xml
  add the following element under the element /libvirtcloud/images
    <image descriptor="/Cloud/libvirt/templates/RHEL-7-minimal.template" name="RHEL-7-minimal">
      <disk descriptor="/Cloud/libvirt/templates/RHEL-7-minimal-vda.template" device="/dev/vda" src-disk="/dev/LibVirtLvmSP/RHEL-7-minimal-template-vda"/>
    </image>

6/ Facilitate the use of the new template
  - copy melody.test/config/extensions/vm/rhel-6.xml.sample into melody.test/config/extensions/vm/rhel-7.xml.sample
  - replace all occurrence of 'rhel-6' into 'rhel-7'
  - replace all occurrence of 'RHEL-6' into 'RHEL-7'

7/ Facilitate the template update :
  - copy melody.demos/update_lvm_backed/RHEL-6-minimal/ into melody.demos/update_lvm_backed/RHEL-7-minimal/
  - replace all occurrence of 'rhel-6' into 'rhel-7'
  - replace all occurrence of 'RHEL-6' into 'RHEL-7'
  - edit melody.demos/update_lvm_backed/ant_launch.xml
  - put this inside
	<!--
		Update LibVirt template 'RHEL-7-minimal'
	-->
	<target name="UC0_update_RHEL-7-minimal">
		<java classname="com.wat.melody.cli.Launcher" fork="true">
			<arg value="-C" />
			<arg value="./../melody.demos/update_lvm_backed/RHEL-7-minimal/mc.properties" />
			<arg value="-o" />
			<arg value="update_template" />
			<classpath refid="classpathElements" />
		</java>
	</target>


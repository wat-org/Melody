# ------------------------------------------------------------
# JMS Common Client Configuration File
#
#   <copyright 
#   notice="lm-source-program" 
#   pids="5724-H72,5655-R36,5655-L82,5724-L26," 
#   years="2008,2012" 
#   crc="3528727443" > 
#  Licensed Materials - Property of IBM  
#   
#  5724-H72,5655-R36,5655-L82,5724-L26, 
#   
#  (C) Copyright IBM Corp. 2008, 2012 All Rights Reserved.  
#   
#  US Government Users Restricted Rights - Use, duplication or  
#  disclosure restricted by GSA ADP Schedule Contract with  
#  IBM Corp.  
#   </copyright> 
#
# This file allows client wide configuration properties to be specified
# The properties below include properties for controlling Trace and other
# serviceability features and also for controlling aspects of the WebSphere
# MQ JMS client interacts with WMQ
#
# To use this file invoke the JVM as follows
# 
#  java -Dcom.ibm.msg.client.config.location=file:/f:/jms.config  my.java.applicationClass
#
#  Supported URL types are file:// http:// ftp://  jar://
#
# Note: that 'Start-Up Trace' can not be specified via this file and must be specified on 
# JVM system property as follows
#
#  java -Dcom.ibm.msg.client.commonservices.trace.startup=true  my.java.applicationClass
#
# This file should be treated as a sample and a copy made in a product specific location.
# Changes can then be made to this copy.

#------------------------------------------------------------------------
# Java Standard Environment Environment Trace Settings

# Is trace started or stopped?
# 
# Valid values
#             ON - Trace is on
#            OFF - Trace is off (Default)
#         LISTEN - Trace can be controlled remotely.
#         WMQTRC - Trace can be controlled by the strmqtrc and endmqtrc commands
#com.ibm.msg.client.commonservices.trace.status=OFF
com.ibm.msg.client.commonservices.trace.status=ON

# Level of trace.  
# 
# A value of 4 will produce trace for level 4 and all levels
# numerically lower than 4  (i.e. levels 1,2,3)
#
# Valid values
#                  1 - Exceptions 
#                  3 - Warnings
#                  6 - Info
#                  8 - Entry Exit
#                  9 - Data
#  Integer.MAX_VALUE - Everything (Default)  
# com.ibm.msg.client.commonservices.trace.level=99
com.ibm.msg.client.commonservices.trace.level=1

# The output name of the trace file. Can be either absolute or relative
# %PID% will be replaced with the Process ID of the running process

#com.ibm.msg.client.commonservices.trace.outputName=mqjms_%PID%.trc
com.ibm.msg.client.commonservices.trace.outputName=ยง[jees.path]ยง/log/mqjms.trc

# Trace exclusion and inclusion
#
# Note that the package inclusion and exclusion lists work in concert with
# each other.  When determining the packages the exclusion list is processed
# first, and then the inclusion list is superimposed. So if a package
# is in both lists then it will be included
#
# For example to just trace the package com.ibm.mq.jms and com.ibm.msg.client.wmq
# use these settings - note the exclude=ALL is important otherwise everything is traced
#com.ibm.msg.client.commonservices.trace.include=com.ibm.mq.jms;com.ibm.msg.client.wmq
#com.ibm.msg.client.commonservices.trace.exclude=ALL
#
# Sub-packages.  For example,  if package "a.b" was excluded and package "a.b.x" was 
# included then the trace would include everything in "a.b.x" and "a.b.x.1" etc, 
#but not "a.b.y", "a.b.z" etc.

# a ; separated list of the packages or fully qualified class names that will
# be traced
# ALL indicates ALL packages to be traced and is the default
#com.ibm.msg.client.commonservices.trace.include=ALL

# a ; separated list of the packages or fully qualified class names that will NOT
# be traced
# NONE indicates NO packages to be excluded and is the default
#com.ibm.msg.client.commonservices.trace.exclude=NONE

# Specifies the maximum number of bytes that will be trace from any call
# to trace message data
#
# Valid values
#   Positive integer - data will be written up to that value of bytes per trace call
#                0   - means no data will be written
#               -1   - means unlimited  (default)
#com.ibm.msg.client.commonservices.trace.maxBytes=-1

# This specifies the maximum number of bytes that will be written to any one
# trace file
#   Positive integer - data will be written up to that value of bytes per trace file
#                0   - means no data will be written
#               -1   - means unlimited  (default)
#com.ibm.msg.client.commonservices.trace.limit=-1
com.ibm.msg.client.commonservices.trace.limit=26214400

# The number of trace files to cycle through. As each file reaches
# com.ibm.msg.client.commonservices.trace.limit trace will begin in the next file
# 
# Valid values
#   Positive integer - number of files to cycle through
#                0   - a single file (default)
# com.ibm.msg.client.commonservices.trace.count=1
com.ibm.msg.client.commonservices.trace.count=5

# Controls whether method parameters and return values should be traced
# 
# Valid values   
#              TRUE  -  values traced (Default) 
#             FALSE  -  values NOT traced
#com.ibm.msg.client.commonservices.trace.parameter=true

# Controls whether trace is compressed
# SHOULD NOT BE USED IF JVM HAS BEEN SEEN TO CRASH IN SCENARIOS TO BE TRACED
# AS COMPRESSED FILE MAY BE RENDERED UNREADABLE
# 
# Valid values   
#              TRUE  -  compression on  
#             FALSE  -  compression off (Default)
#com.ibm.msg.client.commonservices.trace.compress=false

# Regular expression filter that is applied to the trace
# If this matches, then the trace point is not traced.
#
# The string that is matched is formed from the class name followed by a . 
# and the method name.
#
# Note the class name is formed first with the fully qualified name of the class
# of the current object. If the class where the implementation of the current
# method in is different then this class name follows in brackets (with no package name)
# This may occur if a method defined in a superclass is being used
#
# The current regular expression is good a filtering out lesser used parts of trace
# com.ibm.msg.client.commonservices.trace.searchString=.*PropertyContext.*|.*PropertyValidator.*|.*validate.*|.*Canonical.*|.*JmqiDC.*

# Append to Trace File
#
# Controls if the trace file should be appended to or a new one created each time trace
# is enabled
#
# Valid values   
#              TRUE  -  Trace is appended to the file
#             FALSE  -  New file is created (Default)
#com.ibm.msg.client.commonservices.trace.append=false
com.ibm.msg.client.commonservices.trace.append=true 

# FFST Suppression
#
# FFST are written out only when there is a suspicion that there might be a serious problem.
# The intent is not to write out FFST in situations that are warnings.
# 
# In some rare situations it is possible for FFSTs to be generated that are false positives.
# An example is the implementation of an MDB repeatedly failing to work and throwing unchecked
# exceptions. 
#
# This option should be left at its default value and only set when there is positive
# evidence of a duplicate FFST and it is not a problem
#
# A duplicate FFST is defined as being the same ProbeID, and from the same point in the codebase
#
# Valid values
#                0 - No suppression all FFST written out (default)
#               -1 - Only the first instance of a FFST is written out
#           <any positive integer>  - FFST is output every x times
#
# com.ibm.msg.client.commonservices.ffst.suppress = 0


# ----------------------------------------------------------------------------------
# Logging

# Name(s) of the log file(s)
# Can be 
#    * a single pathname 
#    * a comma-separated list of pathnames (all data is logged to all files) 
# Each pathname can be 
#    * absolute or relative pathname
#    * "stderr" or "System.err" to represent the standard error stream
#    * "stdout" or "System.out" to represent the standard output stream 
com.ibm.msg.client.commonservices.log.outputName=ยง[jees.path]ยง/log/mqjms.log

# Specifies the maximum number of bytes that will be logged from any call
# to log message data
#
# Valid values
#   Positive integer - data will be written up to that value of bytes per log call
#                0   - means no data will be written
#               -1   - means unlimited  (default)
com.ibm.msg.client.commonservices.log.maxBytes=-1

# This specifies the maximum number of bytes that will be written to any one
# log file (default is 262144)
#   Positive integer - data will be written up to that value of bytes per log file
#                0   - means no data will be written
#               -1   - means unlimited
#com.ibm.msg.client.commonservices.log.limit=0
com.ibm.msg.client.commonservices.log.limit=26214400

# The number of log files to cycle through. As each file reaches
# com.ibm.msg.client.commonservices.trace.limit trace will begin in the next file
# (default is 3)
# Valid values
#   Positive integer - number of files to cycle through
#                0   - a single file
#com.ibm.msg.client.commonservices.log.count=1
com.ibm.msg.client.commonservices.log.count=5

 
# ----------------------------------------------------------------------------------
# Java SE Specifics
# 
# These settings are applicable only when the WebSphere MQ classes for JMS are running in a
# Java Standard Edition environment.

# Should a JavaCore file be written when immediately after an FDC file has been generated?
# If set to true a JavaCore file will be produced (subject to the JVM's ability to do so)
#
# Valid values   
#              TRUE  -  do generate JavaCore  
#             FALSE  -  do not generate JavaCore (Default)
#
#com.ibm.msg.client.commonservices.j2se.produceJavaCore=true

# WMQ JMS within WAS v6 or V6.1 integration is done via the WMQ JMS Client
#
# All tracing is integrated into the main WAS trace system. Within WAS 6 or 6.1 it is possible
# to disconnect this tracing and use the standard JMS mechanisms
#
#           TRUE  -  Trace is collected via JMS Client standard trace mechanisms
#          FALSE  -  Trace is routed to the WAS Trace systems (Default)
#
#com.ibm.msg.client.commonservices.trace.standalone=FALSE

# When inside WAS 6, the JMS client needs to check regularly if WAS tracing has been enabled
# The frequency of this check can be adjusted.
#
# Valid Values
#        Positive Integer - Number of milliseconds to wait between checks
#             10000       - Default value of 10 seconds
#com.ibm.msg.client.commonservices.trace.was.sleepTime=10000

# ----------------------------------------------------------------------------------
# WMQ Properties

# z/OS RRS Transactions
#
# It is possible to improve performance by allowing the transactional context of two connections
# connecting to the same QueueManager to be shared. This is of great use within a MDB scenario
# where the message driving the MDB and the message being sent in response is to the same
# QueueManager.
#
# There is a Connection Factory property to enable this on a per connection basis.
# This override property permits a JVM wide override of this setting. The reason for specifying
# this override is that use of this property has restrictions in its use
#
#              TRUE  -  Enable this optimization for all Connections 
#             FALSE  -  Disable this optimization for all Connections 
#             AS_CF  -  Optimization is determined by the Connection Factory setting (Default)
#    com.ibm.msg.client.wmq.overrideInheritRRSContext=AS_CF    

# User ID sent on when none specified
#
# There are two APIs used when creating a connection. createConnection() taking no paramteres
# and createConnection(user-name,password).  When createConnection() is called it is equivalent
# to calling createConnection(null,null).
#
# Different applications have different requirements for the ultimate user id to use if a null or
# an empty string is specified for the user id. This property will control if the user if of the JVM
# is used if a null or "" is supplied or the createConnection method called.
#
#           TRUE  - If the application passes an "" (empty string) or a null UserID to create a 
#                   connection, then the UserID of the process that started the application will 
#                   be picked up by the JMS layer and sent to the queue manager for authentication.
#           FALSE - If the application passes an "" (empty string) or a null UserID to create a 
#                   connection, then an "" (empty string) UserID value will be sent to the queue manager for authentication.
#                   (default)
#   com.ibm.mq.jms.ForceUserID=FALSE

# Provider Version
#
# The v7 JMS client can operate in two modes, migration and normal. Within normal mode all the features
# of WMQ v7 are used. Within in migration mode the algorithms and API calls consistent with a WMQ v6 level
# of Queue Manager are used. For example this uses queue-based publish subscribe function. 
#

# WMQ Migration Mode Properties
#
# These properties are only applicable to the migration mode (set by using the provider version
# property on the connection factory set to 6)
#
    
#
# The number of messages to accept using a buffer that is too big before reducing its size.
#
# Zero value for this property means we will always clear the buffer after a successful get
# call, and never reuse the buffer. It also means that every get call will first be attempted
# with a buffer of the defaultMaxMsgSize. Default buffer size is 4k
# 
#          0  - Buffer always reset to default size
#         10  - Default value, buffer will be resized after 10th message (default)
#com.ibm.msg.client.wmq.v6.base.internal.MQQueue.smallMsgsBufferReductionThreshold=10


# WMQ Normal Mode Properties
#
#
# The receiveConversionCCSID property can be set to override the default CCSID value in the MQMD
# structure used to receive messages from the queue manager. By default, the MQMD will contain a
# CCSID field set to 1208 , but this can be changed if, for example, the queue manager is unable
# to convert messages to this code-page. Setting this property to a value of -1 will cause the
# CCSID field to be set to the platform default.
# 
# Valid Values:
#            any valid CCSID number
#              -1 - Platform Default
#            1208 - default
#com.ibm.msg.client.wmq.receiveConversionCCSID=1208

# ----------------------------------------------------------------------------------
# Client-mode Specifics

# Polling interval to check for broken connections when waiting for a server response
#
# Valid values
#   Positive integer - number of milliseconds to wait before checking
#                      default value is 10000 or 10 seconds
#                      minimum value is 3000, lower values will be treated as this 
#com.ibm.mq.polling.RemoteRequestEntry=10000

# WMQ Customer-requested properties
#
# The useDefaultBOValues property overrides the use of the Backout parameters
# (retry queue and threshold) from a target queue
#
# Valid values
#		TRUE
#		FALSE
#        
# When com.ibm.mq.jms.useDefaultBOValues=true, the default retry queue and threshold
# are always used, so the 2035 errors resulting from the user not being granted the
# necessary authorization on the target queue are no longer reported by RACF
#
# When com.ibm.mq.jms.useDefaultBOValues=false, the WMQ JMS Client behaves as before
# taking the retry queue and threshold details from the target queue. Any 2035 errors
# resulting from the user not being granted the necessary authorities on the target
# queue are reported by RACF

# Suppression of the "...that had previously been marked using browse-with-mark, but
# the message was not there..." message, indicating that asynchronous consumer
# contention is occurring within the system.
#
# com.ibm.msg.client.wmq.suppressBrowseMarkMessageWarning
#
# Valid values
#       TRUE
#       FALSE

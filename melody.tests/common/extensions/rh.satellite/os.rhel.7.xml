<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>

<sequence basedir=".">

    <order name="rh-satellite-register-on-single-machine">
        <ssh description="[rhsm-register:§[machine.cnx.ip]§]" host="§[machine.cnx.ip]§" login="root" keypair-name="§[machine.cnx.kp]§">
            <exec>
                <![CDATA[
declare almsg="System already registered in RHSM"
declare okmsg="System successfully registered in RHSM"
declare errmsg="Fail to register system in RHSM"

declare testcmd="subscription-manager identity 1>/dev/null"
declare docmd="subscription-manager register --auto-attach --force --username=§[rhsm.user.login]§ --password='§[rhsm.user.pwd]§'"

declare retryallowedmsg="(\
network error\
|unable to connect to server\
|remote server error\
|temporary failure in name resolution\
|connection timed out\
|network is unreachable\
|name or service not known\
|could not resolve host\
)"

eval ${testcmd} && {
  echo "${almsg}. Nothing to do."
  exit 0
}

declare retry=3 ret=0 out="$(mktemp --suffix=.out)" err="$(mktemp --suffix=.err)"

while [ ${retry} -ge 0 ]; do
  eval ${docmd} 1> >(tee "${out}") 2> >(tee "${err}" >&2)
  [ $? = 0 ] && break
  cat "${out}" "${err}" | grep -Ei "${retryallowedmsg}" 1>/dev/null || { retry=-1; break; }
  echo "---> ${errmsg}. ${retry} try left." >&2
  retry=$((retry-1))
  [ $retry = -1 ] && break
  sleep $(((3-retry)*4))
done

[ ${retry} = -1 ] && {
  echo "${errmsg}. Exiting with error code 1." >&2
  ret=1
} || {
  echo "${okmsg}."
}

rm -f "${out}" "${err}"
exit ${ret}
                ]]>
            </exec>
        </ssh>

        <echo message="+ Machine '§[machine.id]§' successfully registered in RHN Subscription Manager."/>
    </order>

    <order name="rh-satellite-unregister-on-single-machine">
        <ssh description="[rhsm-unregister:§[machine.cnx.ip]§]" host="§[machine.cnx.ip]§" login="root" keypair-name="§[machine.cnx.kp]§">
            <exec>
                <![CDATA[
declare almsg="System already unregistered in RHSM"
declare okmsg="System successfully unregistered in RHSM"
declare errmsg="Fail to unregister system in RHSM"

declare testcmd="subscription-manager identity 1>/dev/null"
declare docmd="subscription-manager unregister"

declare retryallowedmsg="(\
network error\
|unable to connect to server\
|remote server error\
|temporary failure in name resolution\
|connection timed out\
|network is unreachable\
|name or service not known\
|could not resolve host\
)"

eval ${testcmd} || {
  echo "${almsg}. Nothing to do."
  exit 0
}

declare retry=3 ret=0 out="$(mktemp --suffix=.out)" err="$(mktemp --suffix=.err)"

while [ ${retry} -ge 0 ]; do
  eval ${docmd} 1> >(tee "${out}") 2> >(tee "${err}" >&2)
  [ $? = 0 ] && break
  cat "${out}" "${err}" | grep -Ei "${retryallowedmsg}" 1>/dev/null || { retry=-1; break; }
  echo "---> ${errmsg}. ${retry} try left." >&2
  retry=$((retry-1))
  [ $retry = -1 ] && break
  sleep $(((3-retry)*4))
done

[ ${retry} = -1 ] && {
  echo "${errmsg}. Exiting with error code 1." >&2
  ret=1
} || {
  echo "${okmsg}."
}

rm -f "${out}" "${err}"
exit ${ret}
                ]]>
            </exec>
        </ssh>

        <echo message="+ Machine '§[machine.id]§' successfully unregistered in RHN Subscription Manager."/>
    </order>

</sequence>
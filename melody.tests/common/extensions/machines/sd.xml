<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>

<sequence basedir=".">

    <property name="machine_selector"          value="./environment//instance"/>
    <property name="machine_eligible_criteria" value="1=1"/>
    <property name="machine_match_criteria"    value="1=1"/>

    <order name="do-select-machines">
        <foreach    items="§[machine_selector]§[ §[machine_exists_criteria]§ and §[machine_running_criteria]§ and §[machine_eligible_criteria]§ and §[machine_match_criteria]§ ]"
                    item-name="machine">
            <!-- the ip address used by melody to connect to the machine (can be a @NAT) -->
            <property name="machine.cnx.ip"        value="§[ melody:getNetworkActivationHost(§[machine]§) ]§"/>
            <!-- the fqdn used by melody to connect to the machine -->
            <!-- TODO : should be the DNS resolution of §[machine.cnx.ip]§ -->
            <property name="machine.cnx.fqdn"      value="§[ melody:getNetworkActivationDeviceElement(§[machine]§)/@fqdn ]§"/>
            <!-- the key pair used by melody to connect to the machine (can be a @NAT) -->
            <property name="machine.cnx.kp"        value="§[ melody:getInstanceKeyPairName(§[machine]§) ]§"/>

            <!-- the local ip address of the machine -->
            <property name="machine.ip"            value="§[ melody:getNetworkActivationDeviceElement(§[machine]§)/@ip ]§"/>
            <!-- the local fqdn of the machine -->
            <property name="machine.fqdn"          value="§[ melody:getNetworkActivationDeviceElement(§[machine]§)/@fqdn ]§"/>

            <property name="machine.os.name"       value="§[ §[machine]§/os/@name ]§"/>
            <property name="machine.os.version"    value="§[ §[machine]§/os/@version ]§"/>
            <property name="machine.os.arch"       value="§[ §[machine]§/os/@arch ]§"/>

            <property name="machine.location.site" value="§[ §[machine]§/@site ]§"/>
            <property name="machine.location.rack" value="§[ §[machine]§/@rack ]§"/>

            <property name="machine.id"            value="§[ melody:getInstanceId(§[machine]§) ]§"/>

            <call orders="§[substring-after('§[callback.machine]§','::')]§" sequence-descriptor="§[substring-before('§[callback.machine]§','::')]§"/>
        </foreach>
    </order>

    <!-- loop on each machines.
         caller must define 'callback.machine'.
         caller can define 'machine_eligible_criteria' to target a subset of machines.
         caller can define 'machine_match_criteria' to target a subset of machines. -->
    <order name="select-machines">
        <call orders="do-select-machines">
            <param name="machine_exists_criteria"    value="1=1"/>
            <param name="machine_running_criteria"   value="1=1"/>
        </call>
    </order>

    <!-- loop on each live machines.
         caller must define 'callback.machine'.
         caller can define 'machine_eligible_criteria' to target a subset of machines.
         caller can define 'machine_match_criteria' to target a subset of machines. -->
    <order name="select-live-machines">
        <call orders="do-select-machines">
            <param name="machine_exists_criteria"    value="exists(@instance-id)"/>
            <param name="machine_running_criteria"   value="1=1"/>
        </call>
    </order>

    <!-- loop on each running machines.
         caller must define 'callback.machine'.
         caller can define 'machine_eligible_criteria' to target a subset of machines.
         caller can define 'machine_match_criteria' to target a subset of machines. -->
    <order name="select-running-machines">
        <call orders="do-select-machines">
            <param name="machine_exists_criteria"    value="exists(@instance-id)"/>
            <param name="machine_running_criteria"   value="melody:getNetworkActivationHost(.)!=''"/>
        </call>
    </order>

</sequence>
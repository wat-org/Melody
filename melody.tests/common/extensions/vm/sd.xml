<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>

<sequence basedir="." >

    <property name="instance_selector"          value="./environment//instance"/>
    <property name="instance_exists_criteria"   value="exists(@instance-id)"/>
    <property name="instance_match_criteria"    value="1=1"/>

    <order name="create_all_vm" >
        <echo message="Creating virtual machines ..." />

        <foreach    items="§[instance_selector]§[ §[instance_match_criteria]§ ]"
                    item-name="srv" >
            <new-machine target="§[srv]§" />
            <property name="id" value="§[ melody:getInstanceId(§[srv]§) ]§" />
            <property name="adm_ip" value="§[ melody:getNetworkActivationHost(§[srv]§) ]§" />
            <property name="adm_ip" value="§[ if( '§[adm_ip]§' != '' ) then ' (IP: §[adm_ip]§)' else '' ]§" />
            <echo message="+ virtual machine '§[id]§' created§[adm_ip]§." />
        </foreach>

        <echo message="-- Virtual machines created." />

        <call orders="update_disk_devices" />
        <call orders="update_network_devices" />
        <call orders="update_firewall"/>

    </order>

    <order name="destroy_all_vm" >
        <echo message="Destroying virtual machines ..." />

        <foreach    items="§[instance_selector]§[ §[instance_exists_criteria]§ and §[instance_match_criteria]§ ]"
                    item-name="srv" >
            <property name="id" value="§[ melody:getInstanceId(§[srv]§) ]§" />
            <property name="adm_ip" value="§[ melody:getNetworkActivationHost(§[srv]§) ]§" />
            <property name="adm_ip" value="§[ if( '§[adm_ip]§' != '' ) then ' (IP: §[adm_ip]§)' else '' ]§" />
            <delete-machine target="§[srv]§" />
            <echo message="+ virtual machine '§[id]§' destroyed§[adm_ip]§." />
        </foreach>

        <echo message="-- Virtual machines destroyed." />

        <call orders="update_firewall"/>
    </order>

    <order name="start_all_vm" >
        <echo message="Starting virtual machines ..." />

        <foreach    items="§[instance_selector]§[ §[instance_exists_criteria]§ and §[instance_match_criteria]§ ]"
                    item-name="srv" >
            <property name="id" value="§[ melody:getInstanceId(§[srv]§) ]§" />
            <start-machine target="§[srv]§" />
            <property name="adm_ip" value="§[ melody:getNetworkActivationHost(§[srv]§) ]§" />
            <echo message="+ virtual machine '§[id]§' started (IP: §[adm_ip]§)." />
        </foreach>

        <echo message="-- Virtual machines started." />

        <call orders="update_firewall"/>
    </order>

    <order name="stop_all_vm" >
        <echo message="Stopping virtual machines ..." />

        <foreach    items="§[instance_selector]§[ §[instance_exists_criteria]§ and §[instance_match_criteria]§ ]"
                    item-name="srv" >
            <property name="id" value="§[ melody:getInstanceId(§[srv]§) ]§" />
            <property name="adm_ip" value="§[ melody:getNetworkActivationHost(§[srv]§) ]§" />
            <property name="adm_ip" value="§[ if( '§[adm_ip]§' != '' ) then ' (IP: §[adm_ip]§)' else '' ]§" />
            <stop-machine target="§[srv]§" />
            <echo message="+ virtual machine '§[id]§' stopped§[adm_ip]§." />
        </foreach>

        <echo message="-- Virtual machines stopped." />

        <call orders="update_firewall"/>
    </order>

    <order name="resize_all_vm" >
        <echo message="Resing virtual machines ..." />

        <foreach    items="§[instance_selector]§[ §[instance_exists_criteria]§ and §[instance_match_criteria]§ ]"
                    item-name="srv" >
            <property name="id" value="§[ melody:getInstanceId(§[srv]§) ]§" />
            <resize-machine target="§[srv]§"/>
            <property name="adm_ip" value="§[ melody:getNetworkActivationHost(§[srv]§) ]§" />
            <property name="adm_ip" value="§[ if( '§[adm_ip]§' != '' ) then ' (IP: §[adm_ip]§)' else '' ]§" />
            <echo message="+ virtual machine '§[id]§' resized§[adm_ip]§." />
        </foreach>

        <echo message="-- Virtual machines resized." />
    </order>

    <order name="update_disk_devices" >
        <echo message="Updating disk devices ..." />

        <foreach    items="§[instance_selector]§[ §[instance_exists_criteria]§ and §[instance_match_criteria]§ ]"
                    item-name="srv" >
            <property name="id" value="§[ melody:getInstanceId(§[srv]§) ]§" />
            <update-disk-devices target="§[srv]§" />
            <property name="adm_ip" value="§[ melody:getNetworkActivationHost(§[srv]§) ]§" />
            <property name="adm_ip" value="§[ if( '§[adm_ip]§' != '' ) then ' (IP: §[adm_ip]§)' else '' ]§" />
            <echo message="+ virtual machine '§[id]§' disk devices updated§[adm_ip]§." />
        </foreach>

        <echo message="-- Disk devices updated." />
    </order>

    <order name="update_network_devices" >
        <echo message="Updating network devices ..." />

        <foreach    items="§[instance_selector]§[ §[instance_exists_criteria]§ and §[instance_match_criteria]§ ]"
                    item-name="srv" >
            <property name="id" value="§[ melody:getInstanceId(§[srv]§) ]§" />
            <update-network-devices target="§[srv]§" />
            <property name="adm_ip" value="§[ melody:getNetworkActivationHost(§[srv]§) ]§" />
            <property name="adm_ip" value="§[ if( '§[adm_ip]§' != '' ) then ' (IP: §[adm_ip]§)' else '' ]§" />
            <echo message="+ virtual machine '§[id]§' network devices updated§[adm_ip]§." />
        </foreach>

        <echo message="-- Network devices updated." />
    </order>

    <order name="update_firewall" >
        <echo message="Updating FireWall rules ..." />

        <foreach    items="§[instance_selector]§[ §[instance_exists_criteria]§ and §[instance_match_criteria]§ ]"
                    item-name="srv" >
            <property name="id" value="§[ melody:getInstanceId(§[srv]§) ]§" />
            <update-firewall target="§[srv]§" />
            <property name="adm_ip" value="§[ melody:getNetworkActivationHost(§[srv]§) ]§" />
            <property name="adm_ip" value="§[ if( '§[adm_ip]§' != '' ) then ' (IP: §[adm_ip]§)' else '' ]§" />
            <echo message="+ virtual machine '§[id]§' fire-wall rules updated§[adm_ip]§." />
        </foreach>

        <echo message="-- FireWall rules updated." />
    </order>

    <order name="create_all_protected_areas" >
        <echo message="Creating Protected Areas ..." />

        <foreach    items="./environment//protected-areas/protected-area"
                    item-name="pa" >
            <new-protected-area target="§[pa]§" />
        </foreach>

        <foreach    items="./environment//protected-areas/protected-area[ exists(@id) ]"
                    item-name="pa" >
            <property name="pa.name"   value="§[ melody:getProtectedAreaName(§[pa]§) ]§" />
            <property name="pa.region" value="§[ melody:getProtectedAreaRegion(§[pa]§) ]§" />
            <property name="pa.id"     value="§[ melody:getProtectedAreaId(§[pa]§) ]§" />
            <update-protected-area target="§[pa]§" />
            <echo message="+ protected area '§[pa.name]§' located in region '§[pa.region]§' created (id:'§[pa.id]§')." />
        </foreach>

        <echo message="-- Protected Areas created." />
    </order>

    <order name="destroy_all_protected_areas" >
        <echo message="Destroying Protected Areas ..." />

        <!-- must first remove all rules, in order to be sure the protected
             area is not declared in another one -->
        <foreach    items="./environment//protected-areas/protected-area[ exists(@id) ]"
                    item-name="pa" >
            <reset-protected-area target="§[pa]§" />
        </foreach>

        <foreach    items="./environment//protected-areas/protected-area[ exists(@id) ]"
                    item-name="pa" >
            <property name="pa.name"   value="§[ melody:getProtectedAreaName(§[pa]§) ]§" />
            <property name="pa.region" value="§[ melody:getProtectedAreaRegion(§[pa]§) ]§" />
            <property name="pa.id"     value="§[ melody:getProtectedAreaId(§[pa]§) ]§" />
            <delete-protected-area target="§[pa]§" />
            <echo message="+ protected area '§[pa.name]§' located in region '§[pa.region]§' destroyed (id:'§[pa.id]§')." />
        </foreach>

        <echo message="-- Protected Areas destroyed." />
    </order>

</sequence>
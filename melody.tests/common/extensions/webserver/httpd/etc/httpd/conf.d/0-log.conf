# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
#
#ErrorLog logs/error_log
# local error_log trace + send the error log to the local syslog deamon (and the local syslog demaon will forward these log to a centralized syslog)
ErrorLog "|/usr/bin/tee -a /etc/httpd/logs/error_log | /usr/bin/logger -t 'httpd' -p local4.err"

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
LogLevel ยง[ws.log.level]ยง

#
# The following directives define some format nicknames for use with
# a CustomLog directive (see below).
#

### Standard LogFormat directive => not used under normal condition
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %>s %b" common
LogFormat "%{Referer}i -> %U" referer
LogFormat "%{User-agent}i" agent

### Our Web server is located after a LoadBalancer, which translate the client Source IP (Source Nat)
# We must define differents rules so that we trace the client IP adress
SetEnvIf X-Forwarded-For "^$" NoProxy

# We must define differents rules so that we trace the client IP address in all situation
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" T:%T %V %A %h %D" log_noproxy
LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" T:%T %V %A %h %D" log_proxy

# local access_log trace
CustomLog logs/access_log log_noproxy env=NoProxy
CustomLog logs/access_log log_proxy env=!NoProxy

# we want to send the access log to the local syslog deamon, and the local syslog demaon will forward these log to a centralized syslog
CustomLog "| /usr/bin/logger -t 'httpd' -p local4.notice" log_noproxy env=NoProxy
CustomLog "| /usr/bin/logger -t 'httpd' -p local4.notice" log_proxy env=!NoProxy

LoadModule cache_module modules/mod_cache.so
LoadModule disk_cache_module modules/mod_disk_cache.so

#
# To enable a cache of proxied content, uncomment the following lines.
# See http://httpd.apache.org/docs/2.2/mod/mod_cache.html for more details.

<IfModule cache_module>
  <IfModule disk_cache_module>
     CacheEnable disk /
     CacheRoot /var/www/cacheroot
     CacheLock on
     #CacheIgnoreNoLastMod On
     CacheIgnoreQueryString On
     CacheIgnoreHeaders Set-Cookie
     CacheIgnoreURLSessionIdentifiers jsessionid
     CacheMaxFileSize 1000000
  </IfModule>

  ######
  # In order for mod_cache to reply with a 304 when the cached resource is valid, 
  # we must remove 'Etag' and 'If-None-Match' headers. Doing this, mod_cache will 
  # rely on If-Modified-Since and Last-Modified headers instead, and thus we will 
  # have the correct behavior.
  #     see https://issues.apache.org/bugzilla/show_bug.cgi?id=47580
  #
  RequestHeader unset If-None-Match
  Header unset ETag


  ###### mod_cache's behavior WITH the workaround describe above
  # 
  # 1/ get the resource send by the backend and put it in the cache (e.g. 'Ctrl-F5' in FireFox) :
  # send this request to your apache http server :
  #   curl -vvv -X GET -H 'Pragma: no-cache' -H 'Cache-Control: no-cache' http://123.123.123.123/images/my-img.png -o /dev/null
  # apache http server log will display :
  #   cache: Caching url: /images/my-img.png
  # backend server log will display :
  #   "GET /images/my-img.png HTTP/1.1" 200
  # apache http server log will display :
  #   disk_cache: Stored headers for URL http://123.123.123.123:80/images/my-img.png?
  #   disk_cache: Body for URL http://123.123.123.123:80/images/my-img.png? cached.
  #   "GET /images/my-img.png HTTP/1.1" 200
  # 
  # 2/ get the cached resource :
  # send this request to your apache http server :
  #   curl -vvv -X GET -H 'If-Modified-Since: Wed, 18 Jun 08:30:00 GMT' http://123.123.123.123/images/my-img.png -o /dev/null
  # apache http server log will display :
  #   "GET /images/my-img.png HTTP/1.1" 304
  # 
  # 3/ refresh the cache (e.g. 'F5' in FireFox) :
  # send this request to your apache http server :
  #   curl -vvv -X GET -H 'If-Modified-Since: Wed, 18 Jun 08:30:00 GMT' -H 'Cache-Control: max-age=0' http://123.123.123.123/images/my-img.png -o /dev/null
  # apache http server log will display :
  #   Cached response for /images/my-img.png isn't fresh.  Adding/replacing conditional request headers.
  #   cache: Caching url: /images/my-img.png
  # backend server log will display :
  #   "GET /images/my-img.png HTTP/1.1" 304
  # apache http server log will display :
  #   disk_cache: Stored headers for URL http://123.123.123.123:80/images/my-img.png?
  #   "GET /images/my-img.png HTTP/1.1" 304
  # 
  # 4/ get the cached resource :
  # send this request to your apache http server :
  #   curl -vvv -X GET -H 'If-Modified-Since: Wed, 18 Jun 08:30:00 GMT' http://123.123.123.123/images/my-img.png -o /dev/null
  # apache http server log will display :
  #   "GET /images/my-img.png HTTP/1.1" 304
  # 
  # ==> exactly what we expect


  ###### mod_cache's behavior WITHOUT the workaround describe above
  # 
  # doing the same sequence, mod_cache will never return 304.
  # ==> bug

</IfModule>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>

<sequence basedir=".">

    <property name="backend_node" value="jee-server"/>

    <!-- deploy each web-servers.
         caller can define callback 'callback.server' in order to perform extra actions on each web-servers.
         caller can define callback 'callback.application' in order to perform application related actions on each web-servers, if applications are declared on a web-server.
         caller can define 'machine_match_criteria' to target a subset of machines. -->
    <order name="deploy-web-servers">
        <echo message="Creating Web Servers ..."/>
        <do-operation-on-web-servers>
            <param name="callback.ws" value="deploy-web-server"/>
        </do-operation-on-web-servers>
        <echo message="-- Web Servers successfully created."/>
    </order>

    <!-- start each web-servers.
         caller can define 'machine_match_criteria' to target a subset of machines. -->
    <order name="start-web-servers">
        <echo message="Starting Web Servers ..."/>
        <do-operation-on-web-servers>
            <param name="callback.ws" value="start-web-server"/>
        </do-operation-on-web-servers>
        <echo message="-- Web Servers successfully started."/>
    </order>

    <!-- stop each web-servers.
         caller can define 'machine_match_criteria' to target a subset of machines. -->
    <order name="stop-web-servers">
        <echo message="Stopping Web Servers ..."/>
        <do-operation-on-web-servers>
            <param name="callback.ws" value="stop-web-server"/>
        </do-operation-on-web-servers>
        <echo message="-- Web Servers successfully stopped."/>
    </order>

    <!-- loop on each machines where a web-server is declared.
         caller must define callback 'callback.ws'.
         caller can define 'machine_match_criteria' to target a subset of machines. -->
    <order name="do-operation-on-web-servers">
        <select-running-machines>
            <param name="machine_eligible_criteria"   value="exists(web-server)"/>
            <param name="callback.machine"            value="do-operation-on-web-server-on-single-machine"/>
        </select-running-machines>
    </order>

    <order name="do-operation-on-web-server-on-single-machine">
        <property name="ws.provider"             value="§[ §[machine]§/web-server/@provider ]§"/>
        <property name="ws.path"                 value="§[ §[machine]§/web-server/@path ]§"/>
        <property name="ws.owner"                value="§[ §[machine]§/web-server/owner/@login ]§"/>
        <property name="ws.owner.id"             value="§[ §[machine]§/credentials/user[@name='§[ws.owner]§']/@id ]§"/>
        <property name="ws.owner.home-dir"       value="§[ §[machine]§/credentials/user[@login='§[ws.owner]§']/@homedir ]§"/>
        <property name="ws.group"                value="§[ §[machine]§/credentials/user[@name='§[ws.owner]§']/@ref-group-name ]§"/>
        <property name="ws.group.id"             value="§[ §[machine]§/credentials/group[@name='§[ws.group]§']/@id ]§"/>
        <property name="ws.listen.device"        value="§[ melody:getAttributeValue(§[machine]§/web-server/listen-on/@device, 'eth0') ]§"/>
        <property name="ws.listen.port-offset"   value="§[ melody:getAttributeValue(§[machine]§/web-server/listen-on/@port-offset, '0') ]§"/>
        <property name="ws.listen.port.http"     value="§[ number(melody:getAttributeValue(§[machine]§/web-server/listen-on/socket[@name='http']/@port, '80')) + §[ws.listen.port-offset]§ ]§"/>
        <property name="ws.listen.ip"            value="§[ melody:getNetworkDeviceElementByName(§[machine]§, '§[ws.listen.device]§')/@ip ]§"/>
        <property name="ws.listen.fqdn"          value="§[ melody:getNetworkDeviceElementByName(§[machine]§, '§[ws.listen.device]§')/@fqdn ]§"/>
        <property name="ws.log.level"            value="§[ melody:getAttributeValue(§[machine]§/web-server/log/@level, 'warn') ]§"/>

        <source order="§[callback.ws]§"/>
    </order>


    <order name="deploy-web-server">
        <source order="deploy-web-server-on-single-machine" provider="§[ws.provider]§"/>
    </order>

    <order name="start-web-server">
        <source order="start-web-server-on-single-machine" provider="§[ws.provider]§"/>
    </order>

    <order name="stop-web-server">
        <source order="stop-web-server-on-single-machine" provider="§[ws.provider]§"/>
    </order>

</sequence>